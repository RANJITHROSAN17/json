name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

# concurrency:
#   group: ci-${{ github.event.pull_request.number || github.ref }}
#   cancel-in-progress: true

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm ci

      - name: Create .env
        run: |
          touch .env
          echo DATABASE_URL={{ secrets.DATABASE_URL }} >> .env
          echo SOUND_DIR={{ secrets.SOUND_DIR }} >> .env
          echo GOOGLE_PROJECT_ID={{ secrets.GOOGLE_PROJECT_ID }} >> .env
          echo GOOGLE_LOCATION={{ secrets.GOOGLE_LOCATION }} >> .env
          echo MICROSOFT_SPEECH_KEY={{ secrets.MICROSOFT_SPEECH_KEY }} >> .env
          echo DEEPL_AUTH_KEY={{ secrets.DEEPL_AUTH_KEY }} >> .env
          echo GMAIL_USER={{ secrets.GMAIL_USER }} >> .env
          echo GMAIL_PASS={{ secrets.GMAIL_PASS }} >> .env

      - name: Build
        run: npm run build

      - name: Typecheck
        run: npm run typecheck
        env:
          GMAIL_USER: test
          GMAIL_PASS: test

  test:
    name: Vitest Tests
    runs-on: ubuntu-latest

    timeout-minutes: 10

    env:
      DATABASE_URL: mysql://root:root@127.0.0.1:3306/test

    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_USER: root
          MYSQL_ROOT_PASSWORD: root
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm ci

      - name: Create .env
        run: |
          touch .env
          echo DATABASE_URL={{ secrets.DATABASE_URL }} >> .env
          echo SOUND_DIR={{ secrets.SOUND_DIR }} >> .env
          echo GOOGLE_PROJECT_ID={{ secrets.GOOGLE_PROJECT_ID }} >> .env
          echo GOOGLE_LOCATION={{ secrets.GOOGLE_LOCATION }} >> .env
          echo MICROSOFT_SPEECH_KEY={{ secrets.MICROSOFT_SPEECH_KEY }} >> .env
          echo DEEPL_AUTH_KEY={{ secrets.DEEPL_AUTH_KEY }} >> .env
          echo GMAIL_USER={{ secrets.GMAIL_USER }} >> .env
          echo GMAIL_PASS={{ secrets.GMAIL_PASS }} >> .env

      - name: Prisma generate
        run: npx prisma generate

      - name: Prisma migrate
        run: npx prisma migrate deploy

      - name: Seeder generate
        run: npx prisma db seed

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test:ci

  test_e2e:
    name: Playwright Tests
    runs-on: ubuntu-latest

    timeout-minutes: 10

    env:
      DATABASE_URL: mysql://root:root@127.0.0.1:3306/test

    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_USER: root
          MYSQL_ROOT_PASSWORD: root
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Install dependencies
        run: npm ci

      - name: Create .env
        run: |
          touch .env
          echo DATABASE_URL={{ secrets.DATABASE_URL }} >> .env
          echo SOUND_DIR={{ secrets.SOUND_DIR }} >> .env
          echo GOOGLE_PROJECT_ID={{ secrets.GOOGLE_PROJECT_ID }} >> .env
          echo GOOGLE_LOCATION={{ secrets.GOOGLE_LOCATION }} >> .env
          echo MICROSOFT_SPEECH_KEY={{ secrets.MICROSOFT_SPEECH_KEY }} >> .env
          echo DEEPL_AUTH_KEY={{ secrets.DEEPL_AUTH_KEY }} >> .env
          echo GMAIL_USER={{ secrets.GMAIL_USER }} >> .env
          echo GMAIL_PASS={{ secrets.GMAIL_PASS }} >> .env

      - name: Prisma generate
        run: npx prisma generate

      - name: Prisma migrate
        run: npx prisma migrate deploy

      - name: Seeder generate
        run: npx prisma db seed

      # https://playwright.dev/docs/ci-intro
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test:e2e
